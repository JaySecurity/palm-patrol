[0] undefined
[0] <ref *2> IncomingMessage {
[0]   _readableState: ReadableState {
[0]     objectMode: false,
[0]     highWaterMark: 16384,
[0]     buffer: BufferList { head: null, tail: null, length: 0 },
[0]     length: 0,
[0]     pipes: [],
[0]     flowing: null,
[0]     ended: false,
[0]     endEmitted: false,
[0]     reading: false,
[0]     sync: true,
[0]     needReadable: false,
[0]     emittedReadable: false,
[0]     readableListening: false,
[0]     resumeScheduled: false,
[0]     errorEmitted: false,
[0]     emitClose: true,
[0]     autoDestroy: false,
[0]     destroyed: false,
[0]     errored: null,
[0]     closed: false,
[0]     closeEmitted: false,
[0]     defaultEncoding: 'utf8',
[0]     awaitDrainWriters: null,
[0]     multiAwaitDrain: false,
[0]     readingMore: true,
[0]     decoder: null,
[0]     encoding: null,
[0]     [Symbol(kPaused)]: null
[0]   },
[0]   _events: [Object: null prototype] { end: [Function: clearRequestTimeout] },
[0]   _eventsCount: 1,
[0]   _maxListeners: undefined,
[0]   socket: <ref *1> Socket {
[0]     connecting: false,
[0]     _hadError: false,
[0]     _parent: null,
[0]     _host: null,
[0]     _readableState: ReadableState {
[0]       objectMode: false,
[0]       highWaterMark: 16384,
[0]       buffer: BufferList { head: null, tail: null, length: 0 },
[0]       length: 0,
[0]       pipes: [],
[0]       flowing: true,
[0]       ended: false,
[0]       endEmitted: false,
[0]       reading: true,
[0]       sync: false,
[0]       needReadable: true,
[0]       emittedReadable: false,
[0]       readableListening: false,
[0]       resumeScheduled: false,
[0]       errorEmitted: false,
[0]       emitClose: false,
[0]       autoDestroy: false,
[0]       destroyed: false,
[0]       errored: null,
[0]       closed: false,
[0]       closeEmitted: false,
[0]       defaultEncoding: 'utf8',
[0]       awaitDrainWriters: null,
[0]       multiAwaitDrain: false,
[0]       readingMore: false,
[0]       decoder: null,
[0]       encoding: null,
[0]       [Symbol(kPaused)]: false
[0]     },
[0]     _events: [Object: null prototype] {
[0]       end: [Array],
[0]       timeout: [Function: socketOnTimeout],
[0]       data: [Function: bound socketOnData],
[0]       error: [Array],
[0]       close: [Array],
[0]       drain: [Function: bound socketOnDrain],
[0]       resume: [Function: onSocketResume],
[0]       pause: [Function: onSocketPause]
[0]     },
[0]     _eventsCount: 8,
[0]     _maxListeners: undefined,
[0]     _writableState: WritableState {
[0]       objectMode: false,
[0]       highWaterMark: 16384,
[0]       finalCalled: false,
[0]       needDrain: false,
[0]       ending: false,
[0]       ended: false,
[0]       finished: false,
[0]       destroyed: false,
[0]       decodeStrings: false,
[0]       defaultEncoding: 'utf8',
[0]       length: 0,
[0]       writing: false,
[0]       corked: 0,
[0]       sync: true,
[0]       bufferProcessing: false,
[0]       onwrite: [Function: bound onwrite],
[0]       writecb: null,
[0]       writelen: 0,
[0]       afterWriteTickInfo: null,
[0]       buffered: [],
[0]       bufferedIndex: 0,
[0]       allBuffers: true,
[0]       allNoop: true,
[0]       pendingcb: 0,
[0]       prefinished: false,
[0]       errorEmitted: false,
[0]       emitClose: false,
[0]       autoDestroy: false,
[0]       errored: null,
[0]       closed: false,
[0]       closeEmitted: false
[0]     },
[0]     allowHalfOpen: true,
[0]     _sockname: null,
[0]     _pendingData: null,
[0]     _pendingEncoding: '',
[0]     server: Server {
[0]       maxHeaderSize: undefined,
[0]       insecureHTTPParser: undefined,
[0]       _events: [Object: null prototype],
[0]       _eventsCount: 2,
[0]       _maxListeners: undefined,
[0]       _connections: 1,
[0]       _handle: [TCP],
[0]       _usingWorkers: false,
[0]       _workers: [],
[0]       _unref: false,
[0]       allowHalfOpen: true,
[0]       pauseOnConnect: false,
[0]       httpAllowHalfOpen: false,
[0]       timeout: 0,
[0]       keepAliveTimeout: 5000,
[0]       maxHeadersCount: null,
[0]       headersTimeout: 60000,
[0]       requestTimeout: 0,
[0]       _connectionKey: '6::::5000',
[0]       [Symbol(IncomingMessage)]: [Function: IncomingMessage],
[0]       [Symbol(ServerResponse)]: [Function: ServerResponse],
[0]       [Symbol(kCapture)]: false,
[0]       [Symbol(async_id_symbol)]: 10
[0]     },
[0]     _server: Server {
[0]       maxHeaderSize: undefined,
[0]       insecureHTTPParser: undefined,
[0]       _events: [Object: null prototype],
[0]       _eventsCount: 2,
[0]       _maxListeners: undefined,
[0]       _connections: 1,
[0]       _handle: [TCP],
[0]       _usingWorkers: false,
[0]       _workers: [],
[0]       _unref: false,
[0]       allowHalfOpen: true,
[0]       pauseOnConnect: false,
[0]       httpAllowHalfOpen: false,
[0]       timeout: 0,
[0]       keepAliveTimeout: 5000,
[0]       maxHeadersCount: null,
[0]       headersTimeout: 60000,
[0]       requestTimeout: 0,
[0]       _connectionKey: '6::::5000',
[0]       [Symbol(IncomingMessage)]: [Function: IncomingMessage],
[0]       [Symbol(ServerResponse)]: [Function: ServerResponse],
[0]       [Symbol(kCapture)]: false,
[0]       [Symbol(async_id_symbol)]: 10
[0]     },
[0]     parser: HTTPParser {
[0]       '0': [Function: bound setRequestTimeout],
[0]       '1': [Function: parserOnHeaders],
[0]       '2': [Function: parserOnHeadersComplete],
[0]       '3': [Function: parserOnBody],
[0]       '4': [Function: parserOnMessageComplete],
[0]       '5': [Function: bound onParserExecute],
[0]       '6': [Function: bound onParserTimeout],
[0]       _headers: [],
[0]       _url: '',
[0]       socket: [Circular *1],
[0]       incoming: [Circular *2],
[0]       outgoing: null,
[0]       maxHeaderPairs: 2000,
[0]       _consumed: true,
[0]       onIncoming: [Function: bound parserOnIncoming],
[0]       [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
[0]     },
[0]     on: [Function: socketListenerWrap],
[0]     addListener: [Function: socketListenerWrap],
[0]     prependListener: [Function: socketListenerWrap],
[0]     _paused: false,
[0]     _httpMessage: ServerResponse {
[0]       _events: [Object: null prototype],
[0]       _eventsCount: 2,
[0]       _maxListeners: undefined,
[0]       outputData: [],
[0]       outputSize: 0,
[0]       writable: true,
[0]       destroyed: false,
[0]       _last: false,
[0]       chunkedEncoding: false,
[0]       shouldKeepAlive: false,
[0]       _defaultKeepAlive: true,
[0]       useChunkedEncodingByDefault: true,
[0]       sendDate: true,
[0]       _removedConnection: false,
[0]       _removedContLen: false,
[0]       _removedTE: false,
[0]       _contentLength: null,
[0]       _hasBody: true,
[0]       _trailer: '',
[0]       finished: false,
[0]       _headerSent: false,
[0]       socket: [Circular *1],
[0]       _header: null,
[0]       _keepAliveTimeout: 5000,
[0]       _onPendingData: [Function: bound updateOutgoingData],
[0]       _sent100: false,
[0]       _expect_continue: false,
[0]       req: [Circular *2],
[0]       locals: [Object: null prototype] {},
[0]       _startAt: undefined,
[0]       _startTime: undefined,
[0]       writeHead: [Function: writeHead],
[0]       __onFinished: [Function],
[0]       [Symbol(kCapture)]: false,
[0]       [Symbol(kNeedDrain)]: false,
[0]       [Symbol(corked)]: 0,
[0]       [Symbol(kOutHeaders)]: [Object: null prototype]
[0]     },
[0]     _peername: { address: '::ffff:127.0.0.1', family: 'IPv6', port: 57996 },
[0]     [Symbol(async_id_symbol)]: 132,
[0]     [Symbol(kHandle)]: TCP {
[0]       reading: true,
[0]       onconnection: null,
[0]       _consumed: true,
[0]       [Symbol(owner_symbol)]: [Circular *1]
[0]     },
[0]     [Symbol(kSetNoDelay)]: false,
[0]     [Symbol(lastWriteQueueSize)]: 0,
[0]     [Symbol(timeout)]: null,
[0]     [Symbol(kBuffer)]: null,
[0]     [Symbol(kBufferCb)]: null,
[0]     [Symbol(kBufferGen)]: null,
[0]     [Symbol(kCapture)]: false,
[0]     [Symbol(kBytesRead)]: 0,
[0]     [Symbol(kBytesWritten)]: 0,
[0]     [Symbol(RequestTimeout)]: undefined
[0]   },
[0]   httpVersionMajor: 1,
[0]   httpVersionMinor: 1,
[0]   httpVersion: '1.1',
[0]   complete: false,
[0]   headers: {
[0]     'x-forwarded-host': 'localhost:3000',
[0]     'x-forwarded-proto': 'http',
[0]     'x-forwarded-port': '3000',
[0]     'x-forwarded-for': '127.0.0.1',
[0]     cookie: 'csrftoken=6b7hLCISLvnU60t4mTRBAKkXWnTO6OObbrobvQxPPlXyXRx8wBT8INbFAdbHyy4s',
[0]     'accept-language': 'en-CA,en-GB;q=0.9,en-US;q=0.8,en;q=0.7',
[0]     'accept-encoding': 'gzip, deflate, br',
[0]     referer: 'http://localhost:3000/AddEvent',
[0]     'sec-fetch-dest': 'empty',
[0]     'sec-fetch-mode': 'cors',
[0]     'sec-fetch-site': 'same-origin',
[0]     origin: 'http://localhost:5000',
[0]     'sec-gpc': '1',
[0]     'content-type': 'multipart/form-data; boundary=----WebKitFormBoundary0vcoZAugGazywG3X',
[0]     'user-agent': 'Mozilla/5.0 (Linux; Android 8.0.0; Pixel 2 XL Build/OPD1.170816.004) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.77 Mobile Safari/537.36',
[0]     authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7Il9pZCI6IjYwYzI0NjI4ZDVlNThkYTA1ZjM0ZGJiZSIsImZpcnN0TmFtZSI6IkpheSIsImxhc3ROYW1lIjoiTmljaG9sbHMiLCJlbWFpbCI6ImpheUBqai5jb20iLCJjcmVhdGVkQXQiOiIyMDIxLTA2LTEwVDE3OjA0OjQwLjc0M1oiLCJ1cGRhdGVkQXQiOiIyMDIxLTA2LTEwVDE3OjA0OjQwLjc0M1oiLCJfX3YiOjB9LCJpYXQiOjE2MjM3MDA3OTYsImV4cCI6MTYyMzczNjc5Nn0.04wkZc-Zt_1YBkUe5c0HVdyNe6EWHM9uWl0gY138c3k',
[0]     accept: 'application/json, text/plain, */*',
[0]     'content-length': '32977',
[0]     connection: 'close',
[0]     host: 'localhost:5000'
[0]   },
[0]   rawHeaders: [
[0]     'x-forwarded-host',
[0]     'localhost:3000',
[0]     'x-forwarded-proto',
[0]     'http',
[0]     'x-forwarded-port',
[0]     '3000',
[0]     'x-forwarded-for',
[0]     '127.0.0.1',
[0]     'cookie',
[0]     'csrftoken=6b7hLCISLvnU60t4mTRBAKkXWnTO6OObbrobvQxPPlXyXRx8wBT8INbFAdbHyy4s',
[0]     'accept-language',
[0]     'en-CA,en-GB;q=0.9,en-US;q=0.8,en;q=0.7',
[0]     'accept-encoding',
[0]     'gzip, deflate, br',
[0]     'referer',
[0]     'http://localhost:3000/AddEvent',
[0]     'sec-fetch-dest',
[0]     'empty',
[0]     'sec-fetch-mode',
[0]     'cors',
[0]     'sec-fetch-site',
[0]     'same-origin',
[0]     'origin',
[0]     'http://localhost:5000',
[0]     'sec-gpc',
[0]     '1',
[0]     'content-type',
[0]     'multipart/form-data; boundary=----WebKitFormBoundary0vcoZAugGazywG3X',
[0]     'user-agent',
[0]     'Mozilla/5.0 (Linux; Android 8.0.0; Pixel 2 XL Build/OPD1.170816.004) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.77 Mobile Safari/537.36',
[0]     'authorization',
[0]     'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7Il9pZCI6IjYwYzI0NjI4ZDVlNThkYTA1ZjM0ZGJiZSIsImZpcnN0TmFtZSI6IkpheSIsImxhc3ROYW1lIjoiTmljaG9sbHMiLCJlbWFpbCI6ImpheUBqai5jb20iLCJjcmVhdGVkQXQiOiIyMDIxLTA2LTEwVDE3OjA0OjQwLjc0M1oiLCJ1cGRhdGVkQXQiOiIyMDIxLTA2LTEwVDE3OjA0OjQwLjc0M1oiLCJfX3YiOjB9LCJpYXQiOjE2MjM3MDA3OTYsImV4cCI6MTYyMzczNjc5Nn0.04wkZc-Zt_1YBkUe5c0HVdyNe6EWHM9uWl0gY138c3k',
[0]     'accept',
[0]     'application/json, text/plain, */*',
[0]     'content-length',
[0]     '32977',
[0]     'connection',
[0]     'close',
[0]     'host',
[0]     'localhost:5000'
[0]   ],
[0]   trailers: {},
[0]   rawTrailers: [],
[0]   aborted: false,
[0]   upgrade: false,
[0]   url: '/',
[0]   method: 'POST',
[0]   statusCode: null,
[0]   statusMessage: null,
[0]   client: <ref *1> Socket {
[0]     connecting: false,
[0]     _hadError: false,
[0]     _parent: null,
[0]     _host: null,
[0]     _readableState: ReadableState {
[0]       objectMode: false,
[0]       highWaterMark: 16384,
[0]       buffer: BufferList { head: null, tail: null, length: 0 },
[0]       length: 0,
[0]       pipes: [],
[0]       flowing: true,
[0]       ended: false,
[0]       endEmitted: false,
[0]       reading: true,
[0]       sync: false,
[0]       needReadable: true,
[0]       emittedReadable: false,
[0]       readableListening: false,
[0]       resumeScheduled: false,
[0]       errorEmitted: false,
[0]       emitClose: false,
[0]       autoDestroy: false,
[0]       destroyed: false,
[0]       errored: null,
[0]       closed: false,
[0]       closeEmitted: false,
[0]       defaultEncoding: 'utf8',
[0]       awaitDrainWriters: null,
[0]       multiAwaitDrain: false,
[0]       readingMore: false,
[0]       decoder: null,
[0]       encoding: null,
[0]       [Symbol(kPaused)]: false
[0]     },
[0]     _events: [Object: null prototype] {
[0]       end: [Array],
[0]       timeout: [Function: socketOnTimeout],
[0]       data: [Function: bound socketOnData],
[0]       error: [Array],
[0]       close: [Array],
[0]       drain: [Function: bound socketOnDrain],
[0]       resume: [Function: onSocketResume],
[0]       pause: [Function: onSocketPause]
[0]     },
[0]     _eventsCount: 8,
[0]     _maxListeners: undefined,
[0]     _writableState: WritableState {
[0]       objectMode: false,
[0]       highWaterMark: 16384,
[0]       finalCalled: false,
[0]       needDrain: false,
[0]       ending: false,
[0]       ended: false,
[0]       finished: false,
[0]       destroyed: false,
[0]       decodeStrings: false,
[0]       defaultEncoding: 'utf8',
[0]       length: 0,
[0]       writing: false,
[0]       corked: 0,
[0]       sync: true,
[0]       bufferProcessing: false,
[0]       onwrite: [Function: bound onwrite],
[0]       writecb: null,
[0]       writelen: 0,
[0]       afterWriteTickInfo: null,
[0]       buffered: [],
[0]       bufferedIndex: 0,
[0]       allBuffers: true,
[0]       allNoop: true,
[0]       pendingcb: 0,
[0]       prefinished: false,
[0]       errorEmitted: false,
[0]       emitClose: false,
[0]       autoDestroy: false,
[0]       errored: null,
[0]       closed: false,
[0]       closeEmitted: false
[0]     },
[0]     allowHalfOpen: true,
[0]     _sockname: null,
[0]     _pendingData: null,
[0]     _pendingEncoding: '',
[0]     server: Server {
[0]       maxHeaderSize: undefined,
[0]       insecureHTTPParser: undefined,
[0]       _events: [Object: null prototype],
[0]       _eventsCount: 2,
[0]       _maxListeners: undefined,
[0]       _connections: 1,
[0]       _handle: [TCP],
[0]       _usingWorkers: false,
[0]       _workers: [],
[0]       _unref: false,
[0]       allowHalfOpen: true,
[0]       pauseOnConnect: false,
[0]       httpAllowHalfOpen: false,
[0]       timeout: 0,
[0]       keepAliveTimeout: 5000,
[0]       maxHeadersCount: null,
[0]       headersTimeout: 60000,
[0]       requestTimeout: 0,
[0]       _connectionKey: '6::::5000',
[0]       [Symbol(IncomingMessage)]: [Function: IncomingMessage],
[0]       [Symbol(ServerResponse)]: [Function: ServerResponse],
[0]       [Symbol(kCapture)]: false,
[0]       [Symbol(async_id_symbol)]: 10
[0]     },
[0]     _server: Server {
[0]       maxHeaderSize: undefined,
[0]       insecureHTTPParser: undefined,
[0]       _events: [Object: null prototype],
[0]       _eventsCount: 2,
[0]       _maxListeners: undefined,
[0]       _connections: 1,
[0]       _handle: [TCP],
[0]       _usingWorkers: false,
[0]       _workers: [],
[0]       _unref: false,
[0]       allowHalfOpen: true,
[0]       pauseOnConnect: false,
[0]       httpAllowHalfOpen: false,
[0]       timeout: 0,
[0]       keepAliveTimeout: 5000,
[0]       maxHeadersCount: null,
[0]       headersTimeout: 60000,
[0]       requestTimeout: 0,
[0]       _connectionKey: '6::::5000',
[0]       [Symbol(IncomingMessage)]: [Function: IncomingMessage],
[0]       [Symbol(ServerResponse)]: [Function: ServerResponse],
[0]       [Symbol(kCapture)]: false,
[0]       [Symbol(async_id_symbol)]: 10
[0]     },
[0]     parser: HTTPParser {
[0]       '0': [Function: bound setRequestTimeout],
[0]       '1': [Function: parserOnHeaders],
[0]       '2': [Function: parserOnHeadersComplete],
[0]       '3': [Function: parserOnBody],
[0]       '4': [Function: parserOnMessageComplete],
[0]       '5': [Function: bound onParserExecute],
[0]       '6': [Function: bound onParserTimeout],
[0]       _headers: [],
[0]       _url: '',
[0]       socket: [Circular *1],
[0]       incoming: [Circular *2],
[0]       outgoing: null,
[0]       maxHeaderPairs: 2000,
[0]       _consumed: true,
[0]       onIncoming: [Function: bound parserOnIncoming],
[0]       [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
[0]     },
[0]     on: [Function: socketListenerWrap],
[0]     addListener: [Function: socketListenerWrap],
[0]     prependListener: [Function: socketListenerWrap],
[0]     _paused: false,
[0]     _httpMessage: ServerResponse {
[0]       _events: [Object: null prototype],
[0]       _eventsCount: 2,
[0]       _maxListeners: undefined,
[0]       outputData: [],
[0]       outputSize: 0,
[0]       writable: true,
[0]       destroyed: false,
[0]       _last: false,
[0]       chunkedEncoding: false,
[0]       shouldKeepAlive: false,
[0]       _defaultKeepAlive: true,
[0]       useChunkedEncodingByDefault: true,
[0]       sendDate: true,
[0]       _removedConnection: false,
[0]       _removedContLen: false,
[0]       _removedTE: false,
[0]       _contentLength: null,
[0]       _hasBody: true,
[0]       _trailer: '',
[0]       finished: false,
[0]       _headerSent: false,
[0]       socket: [Circular *1],
[0]       _header: null,
[0]       _keepAliveTimeout: 5000,
[0]       _onPendingData: [Function: bound updateOutgoingData],
[0]       _sent100: false,
[0]       _expect_continue: false,
[0]       req: [Circular *2],
[0]       locals: [Object: null prototype] {},
[0]       _startAt: undefined,
[0]       _startTime: undefined,
[0]       writeHead: [Function: writeHead],
[0]       __onFinished: [Function],
[0]       [Symbol(kCapture)]: false,
[0]       [Symbol(kNeedDrain)]: false,
[0]       [Symbol(corked)]: 0,
[0]       [Symbol(kOutHeaders)]: [Object: null prototype]
[0]     },
[0]     _peername: { address: '::ffff:127.0.0.1', family: 'IPv6', port: 57996 },
[0]     [Symbol(async_id_symbol)]: 132,
[0]     [Symbol(kHandle)]: TCP {
[0]       reading: true,
[0]       onconnection: null,
[0]       _consumed: true,
[0]       [Symbol(owner_symbol)]: [Circular *1]
[0]     },
[0]     [Symbol(kSetNoDelay)]: false,
[0]     [Symbol(lastWriteQueueSize)]: 0,
[0]     [Symbol(timeout)]: null,
[0]     [Symbol(kBuffer)]: null,
[0]     [Symbol(kBufferCb)]: null,
[0]     [Symbol(kBufferGen)]: null,
[0]     [Symbol(kCapture)]: false,
[0]     [Symbol(kBytesRead)]: 0,
[0]     [Symbol(kBytesWritten)]: 0,
[0]     [Symbol(RequestTimeout)]: undefined
[0]   },
[0]   _consuming: false,
[0]   _dumped: false,
[0]   next: [Function: next],
[0]   baseUrl: '/api/reports',
[0]   originalUrl: '/api/reports/',
[0]   _parsedUrl: Url {
[0]     protocol: null,
[0]     slashes: null,
[0]     auth: null,
[0]     host: null,
[0]     port: null,
[0]     hostname: null,
[0]     hash: null,
[0]     search: null,
[0]     query: null,
[0]     pathname: '/',
[0]     path: '/',
[0]     href: '/',
[0]     _raw: '/'
[0]   },
[0]   params: {},
[0]   query: {},
[0]   res: <ref *3> ServerResponse {
[0]     _events: [Object: null prototype] {
[0]       finish: [Array],
[0]       end: [Function: onevent]
[0]     },
[0]     _eventsCount: 2,
[0]     _maxListeners: undefined,
[0]     outputData: [],
[0]     outputSize: 0,
[0]     writable: true,
[0]     destroyed: false,
[0]     _last: false,
[0]     chunkedEncoding: false,
[0]     shouldKeepAlive: false,
[0]     _defaultKeepAlive: true,
[0]     useChunkedEncodingByDefault: true,
[0]     sendDate: true,
[0]     _removedConnection: false,
[0]     _removedContLen: false,
[0]     _removedTE: false,
[0]     _contentLength: null,
[0]     _hasBody: true,
[0]     _trailer: '',
[0]     finished: false,
[0]     _headerSent: false,
[0]     socket: <ref *1> Socket {
[0]       connecting: false,
[0]       _hadError: false,
[0]       _parent: null,
[0]       _host: null,
[0]       _readableState: [ReadableState],
[0]       _events: [Object: null prototype],
[0]       _eventsCount: 8,
[0]       _maxListeners: undefined,
[0]       _writableState: [WritableState],
[0]       allowHalfOpen: true,
[0]       _sockname: null,
[0]       _pendingData: null,
[0]       _pendingEncoding: '',
[0]       server: [Server],
[0]       _server: [Server],
[0]       parser: [HTTPParser],
[0]       on: [Function: socketListenerWrap],
[0]       addListener: [Function: socketListenerWrap],
[0]       prependListener: [Function: socketListenerWrap],
[0]       _paused: false,
[0]       _httpMessage: [Circular *3],
[0]       _peername: [Object],
[0]       [Symbol(async_id_symbol)]: 132,
[0]       [Symbol(kHandle)]: [TCP],
[0]       [Symbol(kSetNoDelay)]: false,
[0]       [Symbol(lastWriteQueueSize)]: 0,
[0]       [Symbol(timeout)]: null,
[0]       [Symbol(kBuffer)]: null,
[0]       [Symbol(kBufferCb)]: null,
[0]       [Symbol(kBufferGen)]: null,
[0]       [Symbol(kCapture)]: false,
[0]       [Symbol(kBytesRead)]: 0,
[0]       [Symbol(kBytesWritten)]: 0,
[0]       [Symbol(RequestTimeout)]: undefined
[0]     },
[0]     _header: null,
[0]     _keepAliveTimeout: 5000,
[0]     _onPendingData: [Function: bound updateOutgoingData],
[0]     _sent100: false,
[0]     _expect_continue: false,
[0]     req: [Circular *2],
[0]     locals: [Object: null prototype] {},
[0]     _startAt: undefined,
[0]     _startTime: undefined,
[0]     writeHead: [Function: writeHead],
[0]     __onFinished: [Function: listener] { queue: [Array] },
[0]     [Symbol(kCapture)]: false,
[0]     [Symbol(kNeedDrain)]: false,
[0]     [Symbol(corked)]: 0,
[0]     [Symbol(kOutHeaders)]: [Object: null prototype] { 'x-powered-by': [Array] }
[0]   },
[0]   _startAt: [ 111737, 54894415 ],
[0]   _startTime: 2021-06-14T21:18:12.962Z,
[0]   _remoteAddress: '::ffff:127.0.0.1',
[0]   body: {},
[0]   route: Route {
[0]     path: '/',
[0]     stack: [ [Layer], [Layer] ],
[0]     methods: { post: true }
[0]   },
[0]   user: {
[0]     _id: '60c24628d5e58da05f34dbbe',
[0]     firstName: 'Jay',
[0]     lastName: 'Nicholls',
[0]     email: 'jay@jj.com',
[0]     createdAt: '2021-06-10T17:04:40.743Z',
[0]     updatedAt: '2021-06-10T17:04:40.743Z',
[0]     __v: 0
[0]   },
[0]   [Symbol(kCapture)]: false,
[0]   [Symbol(RequestTimeout)]: undefined
[0] }
[0] POST /api/reports/ 201 7.778 ms - 17
<ref *2> IncomingMessage {
[0]   _readableState: ReadableState {
[0]     objectMode: false,
[0]     highWaterMark: 16384,
[0]     buffer: BufferList { head: null, tail: null, length: 0 },
[0]     length: 0,
[0]     pipes: [],
[0]     flowing: null,
[0]     ended: false,
[0]     endEmitted: false,
[0]     reading: false,
[0]     sync: true,
[0]     needReadable: false,
[0]     emittedReadable: false,
[0]     readableListening: false,
[0]     resumeScheduled: false,
[0]     errorEmitted: false,
[0]     emitClose: true,
[0]     autoDestroy: false,
[0]     destroyed: false,
[0]     errored: null,
[0]     closed: false,
[0]     closeEmitted: false,
[0]     defaultEncoding: 'utf8',
[0]     awaitDrainWriters: null,
[0]     multiAwaitDrain: false,
[0]     readingMore: true,
[0]     decoder: null,
[0]     encoding: null,
[0]     [Symbol(kPaused)]: null
[0]   },
[0]   _events: [Object: null prototype] { end: [Function: clearRequestTimeout] },
[0]   _eventsCount: 1,
[0]   _maxListeners: undefined,
[0]   socket: <ref *1> Socket {
[0]     connecting: false,
[0]     _hadError: false,
[0]     _parent: null,
[0]     _host: null,
[0]     _readableState: ReadableState {
[0]       objectMode: false,
[0]       highWaterMark: 16384,
[0]       buffer: BufferList { head: null, tail: null, length: 0 },
[0]       length: 0,
[0]       pipes: [],
[0]       flowing: true,
[0]       ended: false,
[0]       endEmitted: false,
[0]       reading: true,
[0]       sync: false,
[0]       needReadable: true,
[0]       emittedReadable: false,
[0]       readableListening: false,
[0]       resumeScheduled: false,
[0]       errorEmitted: false,
[0]       emitClose: false,
[0]       autoDestroy: false,
[0]       destroyed: false,
[0]       errored: null,
[0]       closed: false,
[0]       closeEmitted: false,
[0]       defaultEncoding: 'utf8',
[0]       awaitDrainWriters: null,
[0]       multiAwaitDrain: false,
[0]       readingMore: false,
[0]       decoder: null,
[0]       encoding: null,
[0]       [Symbol(kPaused)]: false
[0]     },
[0]     _events: [Object: null prototype] {
[0]       end: [Array],
[0]       timeout: [Function: socketOnTimeout],
[0]       data: [Function: bound socketOnData],
[0]       error: [Array],
[0]       close: [Array],
[0]       drain: [Function: bound socketOnDrain],
[0]       resume: [Function: onSocketResume],
[0]       pause: [Function: onSocketPause]
[0]     },
[0]     _eventsCount: 8,
[0]     _maxListeners: undefined,
[0]     _writableState: WritableState {
[0]       objectMode: false,
[0]       highWaterMark: 16384,
[0]       finalCalled: false,
[0]       needDrain: false,
[0]       ending: false,
[0]       ended: false,
[0]       finished: false,
[0]       destroyed: false,
[0]       decodeStrings: false,
[0]       defaultEncoding: 'utf8',
[0]       length: 0,
[0]       writing: false,
[0]       corked: 0,
[0]       sync: true,
[0]       bufferProcessing: false,
[0]       onwrite: [Function: bound onwrite],
[0]       writecb: null,
[0]       writelen: 0,
[0]       afterWriteTickInfo: null,
[0]       buffered: [],
[0]       bufferedIndex: 0,
[0]       allBuffers: true,
[0]       allNoop: true,
[0]       pendingcb: 0,
[0]       prefinished: false,
[0]       errorEmitted: false,
[0]       emitClose: false,
[0]       autoDestroy: false,
[0]       errored: null,
[0]       closed: false,
[0]       closeEmitted: false
[0]     },
[0]     allowHalfOpen: true,
[0]     _sockname: null,
[0]     _pendingData: null,
[0]     _pendingEncoding: '',
[0]     server: Server {
[0]       maxHeaderSize: undefined,
[0]       insecureHTTPParser: undefined,
[0]       _events: [Object: null prototype],
[0]       _eventsCount: 2,
[0]       _maxListeners: undefined,
[0]       _connections: 1,
[0]       _handle: [TCP],
[0]       _usingWorkers: false,
[0]       _workers: [],
[0]       _unref: false,
[0]       allowHalfOpen: true,
[0]       pauseOnConnect: false,
[0]       httpAllowHalfOpen: false,
[0]       timeout: 0,
[0]       keepAliveTimeout: 5000,
[0]       maxHeadersCount: null,
[0]       headersTimeout: 60000,
[0]       requestTimeo